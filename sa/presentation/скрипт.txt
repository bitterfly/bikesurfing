Скрипт на презентацията:

Диана ~ 1.5 min.:

- Представяне на екипа
- Изказване на идеите на проекта
    - да се измисли някакъв начин за комуникация, удобен за потребителите
    - поддрържа съобщения, отдаване и взимане на колела
    - изграждане на общество, в което се споделят пътувания, снимки, блогове

- Изказване на целите
    - да се създаде скалируема платформа, в която може да се регистрира лесно нов сайт
    - той да е независим от другите
    - да е гъвкав при дизайна
    - да е сигурен и лесен за поддръжка

Звезди ~ 2.5 min.
- Фунционални изисквания
    - има разделяне на роли
    - гост - гледане на блог, гледане на страници на колела
    - потребител
        - отдаване на колела
        - одобряване на заявки за колело
        - кандидатстване за наемодател
        - заемане на колела
    - администратори - одобряване на кандидатури за наемодатели,
        добавяне на рампи, работа с профили

6 стъпковия модел:
1. Изтоник - потребител/хардуер
2. Стимул - проблемът
3. Стимулиран артефакт - кой сървър
4. Среда - по време на изпълнение
5. Отговор - какво правим ние
6. Оценка за отговора - метрика
- Нефунционални изисквания
    - използваемост - тук източникът е потребителя
    - надеждност - източник - хардуер
    - модулярност - източник - хардуер
    - ефикасност и бързодействие - източник - потребител
    - поддръжка - източник - хардуер
    - сигурност - източник - хардуер и потребител
    - скалируемост - източник - хардуер

Георги 3min.
-Общ преглед на архитектурата
    - клиент - сървър
    - двуслойна система
        - първи слой - база данни
        - втори слой - обработка и презентация на данните
    - липсва трети слой, заради липсата на джаваскрипт
    - описание на процеса (при зуум на картинката)
- Предимства
    - работи на всички браузери - не ги натоварва, защото само рендят
    - прави само по една заявка на клик, защото генерира отделен HTML за всеки клик
    - малка база данни, защото информацията не се пази в база
- Недостатъци
    - несигурна - лийква данни
    - нескалируема - всичко е на един сървър
    - не е гъвкава, заради динамично създаване на HTML-и на сървъра и фактът, че данните не се пазят в база (трудни заявки)
    - не спазва нито функционалните, нито нефункционалните изисквания
- Оценка
    лоша :D

Ангел 3min.
-Общ преглед на архитектурата
    - клиент- сървър
    - трислойна система
        - първи слой - база данни
        - втори слой бек една на град-сървър
        - трети слой - обработка в браузъра
    - бази данни центрирани
    - описание на процеса между сървъра и логин сървъра
        - споменаване на тунела за автентикация
        - кънектори за сериализация и десериализация
        - кънектори за работа с файлове
        - комуникират през HTTP портове
    - описание на процеса между сървъра и браузъра
        - комуникират с HTTP портове
        - какво се случва в браузъра
- Предимства
    - лесно се добавя град, защото просто се дава сървър - т.е. скалируем
    - спазва изискването за отговор под 200мс - ефикасен
    - гъвкавост - работа с ORM - може да се сменя базата данни, могат да се добавят модели и да се прави динамично търсене, защото зависи от заявки
    - има собствен css - css и html са отделени
    - сигурност - ползваме криптиране
- Недостатъци
    - не върви на всички браузъри
    - изисква повечче писане на код
    - трябва да се администрират отделните сървъри за градове

Никола - Deployment 2min.

- за да се регистрира на нов град и изобщо да се сложи приложението трябва:
- да има качено Ruby и Бъндлър
- да се създаде базата данни - в случая сме ползвали postresql, но може и друга, защото ползваме ORM
- да се попълнят променливите на средата - т.е. - път до базата данни, път, където да се запомнят изображение
- изпълнява се bundle install, което инсталира пакета и неговите зависимости
- пуска се скрипт, който създава схемата на базата данни
- конфигурира се уеб сървърът, така че да пуска заявките от интернет до нашето приложение и се пуска FIrewall, примерно.
- deploy-ят е лесен и почти автоматизиран
- може да се автоматизира и попълването на променливите на средата
- може да се автоматизира и цялото, ако се предостави виртуална машина, съдържаща цялото приложение.


Диана 2min.
- Сравнение
    - Функционални изисквания
        - и двата проекта изпълняват почти всички
        - оригиналният проект няма динамичен филтър
        - оригиналният проект няма комуникация чрез съобщения в сайта
    - Нефункционални изисквания
        - Използваемост - те вървят на повече браузери, но е дървен и неинтуитивен
            не се поддържа на всички дисплеи
        - Надеждост - модулярност - еми..тука е ясно. Те не са добре модулирани
        - Ефикасност - ние сме <200, те не са
        - Поддръжката - ние водим, те нямат код
        - Сигурност - ... SSL серитификати и, де да знам, 3000 лийкнати лични карти
        - Склалируемост - тествали сме, нашия върви добре с 5.000 последователни и 100 паралелни отговаря под 200мс (даже 100мс). Техният сървър зависна и отговоряше за над 15 секунди
- Оценка
    Ние бием

~13 min.

Ако Биров пита - Звезди е комуникирала с клиентите и е писала нефункционалните
                 Георги е писал функционалните, диаграмата с актьорите и е помагал за новата архитектура
                 Ангел е проучил старата архитектура и е помагал за новата
                 Диана - Новата архитектура и сравнението
                 Никола - Димплоймънт, форматиране и уводни неща